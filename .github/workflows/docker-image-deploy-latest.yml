name: Build and Push Docker Image

on:
  # push:
  #   branches:
  #     - main
  pull_request:
    types:
      - closed

jobs:
  build:
    if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }}
    runs-on: ubuntu-22.04

    steps:
      - name: Check pre-cleanup disk space
        run: |
          echo "Disk space:"
          df -h

      - name: Disk space cleanup
        run: |
          echo "Freeing up maximum disk space..."

          # Remove large packages and their dependencies
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache
          sudo apt-get remove -y --purge '^ghc-.*' '^dotnet-.*' '^llvm-.*' 'mono-.*' '^ruby.*' '^python2.*' '^firefox.*' '^chromium.*' '^google-chrome.*' '^microsoft-edge.*'
          sudo apt-get autoremove -y
          sudo apt-get clean

          # Clear package manager caches
          sudo rm -rf /var/lib/apt/lists/*
          rm -rf ~/.npm
          rm -rf ~/.cache/yarn
          rm -rf ~/.cache/pip

          # Remove large directories and unnecessary files
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/doc
          sudo rm -rf /usr/share/man
          sudo rm -rf /var/cache/*

          # Clean up /tmp
          sudo find /tmp -type f -delete

          # Docker aggressive cleanup
          docker system prune -a -f --volumes
          docker builder prune -a -f
          docker volume prune -f
          docker network prune -f
          docker image prune -a -f

          # Remove all existing Docker images
          docker rmi $(docker images -q) -f || true

          # Remove swap file to free up more memory for the build
          sudo swapoff -a
          sudo rm -f /swapfile

          # Clean up unnecessary large files in the home directory
          find ~/ -type f -size +100M -not -path "*/\.*" -delete || true

          echo "Disk space after super aggressive cleanup:"
          df -h

      - name: Check post-cleanup disk space
        run: |
          echo "Disk space:"
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        run: docker login -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }} crdjangomaticprod01.azurecr.io

      - name: Create .env file
        run: |
          cat <<EOF > .env
          ENV_STATE=${{ secrets.ENV_STATE }}
          PROD_SECRET_KEY=${{ secrets.PROD_SECRET_KEY }}
          PROD_ALLOWED_HOSTS=${{ secrets.PROD_ALLOWED_HOSTS }}
          PROD_ALLOWED_ISSUERS=${{ secrets.PROD_ALLOWED_ISSUERS }}
          PROD_REDIS_URL=${{ secrets.PROD_REDIS_URL }}
          EOF

      - name: Build Docker image
        run: docker buildx build --no-cache --platform linux/amd64 -t fastapi-ai-toolbox --load .

      - name: Tag Docker image
        run: docker tag fastapi-ai-toolbox crdjangomaticprod01.azurecr.io/fastapi-ai-toolbox:prod-latest

      - name: Push Docker image to ACR
        run: docker image push crdjangomaticprod01.azurecr.io/fastapi-ai-toolbox:prod-latest

      - name: Check final disk space
        if: always()
        run: |
          echo "Disk space:"
          df -h
